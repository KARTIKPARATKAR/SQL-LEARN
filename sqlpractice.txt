-- ============================================================
-- üèÜ SQL Script for Creating and Managing the 'band' Table
-- ============================================================

-- üîπ Creating the 'band' table with 'name', 'id' as Primary Key
CREATE TABLE band (
    name VARCHAR(255) NOT NULL,
    id INT NOT NULL,
    PRIMARY KEY(id)
);

-- üîπ Adding new columns: 'release_year' (INT) and 'country' (VARCHAR)
ALTER TABLE band ADD release_year INT;
ALTER TABLE band ADD country VARCHAR(255) NOT NULL;

-- ============================================================
-- üè∑Ô∏è Inserting Data into 'band' Table
-- ============================================================

INSERT INTO band VALUES ('KSP', 1, 2020, 'India');
INSERT INTO band VALUES ('Tata', 2, 2021, 'India');
INSERT INTO band VALUES ('Mahindra', 3, 2022, 'India');
INSERT INTO band VALUES ('Toyota', 4, 2023, 'China');

-- üîπ Adding more entries, including a duplicate name ('Tata')
INSERT INTO band VALUES ('Ford', 5, 2019, 'America');
INSERT INTO band VALUES ('Tata', 6, 2018, 'India');
INSERT INTO band VALUES ('BYD', 7, 2015, 'China');
INSERT INTO band VALUES ('Maruti', 8, NULL, 'India');  -- Null release_year

-- ============================================================
-- üìå Querying the Data
-- ============================================================

-- üîπ Display all records in the 'band' table
SELECT * FROM band;

-- üîπ Select records where 'id' is less than or equal to 3
SELECT * FROM band WHERE id <= 3;

-- üîπ Renaming columns in the output for better readability
SELECT 
    name AS "band_name", 
    id AS "band_id", 
    release_year AS "band_release_year", 
    country AS "band_country" 
FROM band;

-- ============================================================
-- üìå Sorting Data
-- ============================================================

-- üîπ Sort records alphabetically by 'country' (A ‚Üí Z)
SELECT * FROM band ORDER BY country;

-- üîπ Sort records alphabetically by 'name' (A ‚Üí Z)
SELECT * FROM band ORDER BY name;

-- üîπ Sort records in descending order by 'name' (Z ‚Üí A)
SELECT * FROM band ORDER BY name DESC;

-- ============================================================
-- üîç Filtering and Searching in Data
-- ============================================================

-- üîπ Find all bands where 'name' contains the letter 'a'
SELECT * FROM band WHERE name LIKE '%a%';

-- üîπ Find bands where 'name' starts with 'a'
SELECT * FROM band WHERE name LIKE 'a%';

-- üîπ Find bands where 'name' ends with 'a'
SELECT * FROM band WHERE name LIKE '%a';

-- üîπ Find bands where 'a' appears exactly after 2 letters
SELECT * FROM band WHERE name LIKE '__a%';

-- üîπ Find bands where 'a' appears at the 3rd last position
SELECT * FROM band WHERE name LIKE '%a__';

-- üîπ Select bands where 'release_year' is between 2021 and 2023 (inclusive)
SELECT * FROM band WHERE release_year BETWEEN 2021 AND 2023;

-- üîπ Select records where 'release_year' is NULL
SELECT * FROM band WHERE release_year IS NULL;

-- ============================================================
-- üìä Aggregation Queries
-- ============================================================

-- üîπ Count how many times each name appears in the table
SELECT name, COUNT(id) FROM band GROUP BY name;

-- üîπ Display the average value of 'id'
SELECT AVG(id) FROM band;

-- üîπ Calculate the sum of all 'id' values
SELECT SUM(id) FROM band;
